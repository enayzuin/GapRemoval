<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<OutputType>WinExe</OutputType>
		<TargetFramework>net8.0-windows</TargetFramework>
		<PlatformTarget>x64</PlatformTarget>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<UseWPF>true</UseWPF>
		<UseWindowsForms>true</UseWindowsForms>
		<ApplicationIcon>gap_removal_icon.ico</ApplicationIcon>
		<AssemblyTitle>Gap Removal</AssemblyTitle>
		<AssemblyDescription>Removedor de Silêncios de Vídeo</AssemblyDescription>
		<AssemblyCompany>GapRemoval</AssemblyCompany>
		<AssemblyProduct>Gap Removal</AssemblyProduct>
		<AssemblyCopyright>Copyright © 2025</AssemblyCopyright>
		<AssemblyVersion>1.0.0.0</AssemblyVersion>
		<FileVersion>1.0.0.0</FileVersion>
		<Version>1.0.0</Version>
		<PublishSingleFile>false</PublishSingleFile>
		<SelfContained>true</SelfContained>
		<RuntimeIdentifier>win-x64</RuntimeIdentifier>
		<PublishReadyToRun>false</PublishReadyToRun>
		<PublishTrimmed>false</PublishTrimmed>
	</PropertyGroup>

	<ItemGroup>
		<None Include="gap_removal_icon.ico">
			<Pack>True</Pack>
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
	</ItemGroup>

		<ItemGroup>
		<None Include="vlc\**\*.*">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
	</ItemGroup>

	<ItemGroup>
		<None Include="ffmpeg\**\*.*" CopyToOutputDirectory="PreserveNewest" CopyToPublishDirectory="Always" />
	</ItemGroup>

	<ItemGroup>
		<Compile Remove="Utils\NovaPasta\**" />
		<Compile Remove="Video\NovaPasta\**" />
		<EmbeddedResource Remove="Utils\NovaPasta\**" />
		<EmbeddedResource Remove="Video\NovaPasta\**" />
		<None Remove="Utils\NovaPasta\**" />
		<None Remove="Video\NovaPasta\**" />
		<Page Remove="Utils\NovaPasta\**" />
		<Page Remove="Video\NovaPasta\**" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="CommunityToolkit.Mvvm" Version="8.4.0" />
		<PackageReference Include="LibVLCSharp.WPF" Version="3.9.2" />
		<PackageReference Include="MediaInfo.DotNetWrapper" Version="1.0.7" />
		<PackageReference Include="Microsoft.Extensions.Logging" Version="9.0.3" />
		<PackageReference Include="Microsoft.Windows.Compatibility" Version="9.0.3" />
		<PackageReference Include="NAudio" Version="2.2.1" />
		<PackageReference Include="Serilog" Version="4.2.0" />
		<PackageReference Include="Serilog.Extensions.Logging" Version="9.0.1" />
		<PackageReference Include="Serilog.Sinks.File" Version="6.0.0" />
		<PackageReference Include="System.Text.Json" Version="9.0.0" />
		<PackageReference Include="VLC.DotNet.Forms" Version="3.1.0" />
		<PackageReference Include="Xabe.FFmpeg" Version="6.0.1" />
		<PackageReference Include="MediaInfo.DotNetWrapper" Version="21.03.1" />
	</ItemGroup>

	<ItemGroup>
		<Compile Update="Control\DelaySensitivityControl.xaml.cs">
			<SubType>Code</SubType>
		</Compile>
	</ItemGroup>
	
	<!-- Targets para Build Profissional -->
	<Target Name="BuildDistribution" DependsOnTargets="Publish;DownloadBinaries" AfterTargets="Build">
		<Message Text="Iniciando build de distribuição..." Importance="high" />
		
		<!-- Verificar se Inno Setup está instalado -->
		<PropertyGroup>
			<InnoSetupPath>C:\Program Files (x86)\Inno Setup 6\ISCC.exe</InnoSetupPath>
		</PropertyGroup>
		
		<Error Condition="!Exists('$(InnoSetupPath)')" 
			   Text="Inno Setup 6 não encontrado. Instale de: https://jrsoftware.org/isdl.php" />
		
		<!-- Executar Inno Setup -->
		<Exec Command="&quot;$(InnoSetupPath)&quot; &quot;$(MSBuildProjectDirectory)\GapRemoval.iss&quot;" 
			  ContinueOnError="false" />
		
		<Message Text="Instalador gerado com sucesso em: $(MSBuildProjectDirectory)\Output\GapRemovalInstaller.exe" 
				 Importance="high" />
	</Target>

	<!-- Target para Download de Binários -->
	<Target Name="DownloadBinaries" Condition="!Exists('$(MSBuildProjectDirectory)\ffmpeg\ffmpeg.exe') Or !Exists('$(MSBuildProjectDirectory)\vlc\libvlc.dll')">
		<Message Text="Binários não encontrados. Baixando automaticamente..." Importance="high" />
		
		<!-- Executar script PowerShell para download -->
		<Exec Command="powershell -ExecutionPolicy Bypass -File &quot;$(MSBuildProjectDirectory)\download_binaries.ps1&quot;" 
			  ContinueOnError="false" />
		
		<Message Text="Download de binários concluído." Importance="high" />
	</Target>

	<!-- Target para Clean Profissional -->
	<Target Name="CleanDistribution" AfterTargets="Clean">
		<RemoveDir Directories="$(MSBuildProjectDirectory)\Output" />
		<RemoveDir Directories="$(MSBuildProjectDirectory)\publish" />
		<Message Text="Limpeza de distribuição concluída." Importance="high" />
	</Target>

</Project>